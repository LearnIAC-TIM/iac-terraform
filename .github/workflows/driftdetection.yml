name: Infrastructure Drift Detection

on:
  schedule:
    - cron: '0 */6 * * *'  # Run every 6 hours
  workflow_dispatch:        # Allow manual trigger
  
jobs:
  detect_drift:
    runs-on: ubuntu-22.04
    environment: production # Use GitHub environments for better secret management
    
    env:
      ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
      WORKING_DIR: ./course materials/module10/drift-detection
      
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Terraform Init
        id: init
        run: terraform init
        working-directory: ${{ env.WORKING_DIR }}

      - name: Create Reports Directory
        working-directory: ${{ env.WORKING_DIR }}
        run: mkdir -p reports
      
      - name: Terraform Format Check
        id: fmt
        run: terraform fmt -check
        working-directory: ${{ env.WORKING_DIR }} 
        continue-on-error: true
      
      - name: Terraform Plan and Check for Drift
        id: plan
        working-directory: ${{ env.WORKING_DIR }}
        run: |
          # Create plan and capture output
          terraform plan -detailed-exitcode > reports/plan_output.txt 2>&1
          PLAN_EXIT_CODE=$?
          
          # Store the exit code for later use
          echo "plan_exit_code=$PLAN_EXIT_CODE" >> $GITHUB_OUTPUT
          
          # If exit code is 2, we have changes
          if [ $PLAN_EXIT_CODE -eq 2 ]; then
            echo "drift_detected=true" >> $GITHUB_OUTPUT
            echo "Drift detected in terraform plan"
            
            # Create drift details file
            echo "Drift Details:" > reports/drift_details.txt
            echo "===============" >> reports/drift_details.txt
            echo "" >> reports/drift_details.txt
            cat reports/plan_output.txt >> reports/drift_details.txt
          elif [ $PLAN_EXIT_CODE -eq 0 ]; then
            echo "No drift detected"
            echo "drift_detected=false" >> $GITHUB_OUTPUT
          else
            echo "Error running terraform plan"
            exit 1
          fi
      
      - name: Create Drift Report
        if: steps.plan.outputs.drift_detected == 'true'
        id: report
        working-directory: ${{ env.WORKING_DIR }}
        run: |
          # Create markdown report
          cat << EOF > reports/drift_report.md
          # Infrastructure Drift Report
          
          Generated: $(date)
          
          ## Detected Changes
          
          \`\`\`
          $(cat reports/drift_details.txt)
          \`\`\`
          
          ## Next Steps
          
          1. Review the changes above
          2. Update Terraform configuration if changes are approved
          3. Create a pull request with the updates
          4. If changes were not approved, investigate and plan remediation
          
          EOF
          
          # Save to step summary
          cat reports/drift_report.md >> $GITHUB_STEP_SUMMARY
      
      - name: Create Issue
        if: steps.plan.outputs.drift_detected == 'true'
        uses: actions/github-script@v6
        with:
          script: |
            const fs = require('fs');
            const reportContent = fs.readFileSync('${{ env.WORKING_DIR }}/reports/drift_report.md', 'utf8');
            
            await github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: 'ðŸš¨ Infrastructure Drift Detected',
              body: reportContent + `
              
              ## Additional Information
              - [Workflow Run](${context.serverUrl}/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId})
              - [Azure Portal](https://portal.azure.com)
              `
            });
      
      - name: Save Artifacts
        if: steps.plan.outputs.drift_detected == 'true'
        uses: actions/upload-artifact@v3
        with:
          name: drift-report-${{ github.run_id }}
          path: |
            ${{ env.WORKING_DIR }}/reports/drift_report.md
            ${{ env.WORKING_DIR }}/reports/plan_output.txt
            ${{ env.WORKING_DIR }}/reports/drift_details.txt
          retention-days: 90